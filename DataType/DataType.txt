数据类型
存在意义：c++规定在创建变量或常量时要指定相应的数据类型，否则无法给变量分配内存，给变量分配合适的内存空间
1）整型
	语法：数据类型 变量名=变量初始值
	eg：int a=10；
1.1整型类型
	short（短整型）2字节
	int（整型）4字节
	long（长字节）：windows 4字节 、linux（32位）4字节和（64位）8字节
	long long（长长整型）8字节
	不同整型类型的取值范围不同
	短整型（-32768~32767）
	超出上界则跳回下界
2）字符型
作用：用于表示一串字符
	两种风格
	1.c风格字符串： char 变量名[]=”字符串值“
	eg：char str[] = "hello world";
	2.c++风格字符串： string  变量名=“字符串量”
	需要包含一个头文件： #include<string>
		作用：字符型变量用于显示单个字符
		语法：char ch='a';
	注意1：在显示字符型变量时，用单引号括起来，不要用双引号
	注意2：单引号只能有一个字符，不可以是一个字符串，只占用一个字节
	字符型变量并不是把字符本身放到内存中储存，而是将对应的ASCll编码放入到储存单元
	查字母的ASCII值
	语法：cout<<(int)字母<<endl;
	eg：cout << (int)ch << endl;//ch为变量
3）浮点型
作用：用于表示小数
	浮点型变量分为两种
	1、单精度float
	2、双精度double
	两者的区别在于表示的有效数字范围不同（小数点前也是有效数字）
	float  4字节   7位有效数字
	double  8字节   15~16位有效数字
4）布尔类型
作用：布尔数据类型代表真或假的值
	bool类型只有两个值：
	true   真（本质是1）
	false  假（本质是0）
	bool类型只占一个字节大小

sizeof关键字
作用：可以查询数据类型所占用的内存空间为多少（单位：字节）
	整型：short(2)    int(4)   long(4)   long long(8)
	可以利用sizeof求出数据类型占用内存大小
	语法：sizeof （数据类型/变量）
	eg：cout << "short占用内存空间为" << sizeof(num1) << endl;num1为变量
        cout << "int占用内存空间为" << sizeof(int) << endl;int为数据类型


转义字符
作用：用于表示一些不能显示出来的ASCII字符
	现阶段我们常用的转义字符有：\n  \\  \t
	水平制表符 \t：占8个位置  作用：可以整齐输出数据
	换行符\n：换行作用

